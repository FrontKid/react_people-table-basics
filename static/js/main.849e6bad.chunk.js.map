{"version":3,"sources":["api.ts","store/PeopleContext/PeopleContext.tsx","components/Loader/Loader.tsx","components/TableItem/TableItem.tsx","components/TableList/TableList.tsx","components/Table/Table.tsx","pages/People/People.tsx","pages/Home/Home.tsx","pages/NotFound/NotFound.tsx","components/NavBar/NavBar.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","initialContext","people","isLoading","errorMessage","PeopleProvider","createContext","PeopleContext","children","useState","setPeople","setIsLoading","setErrorMessage","containsPeople","useLocation","pathname","includes","useEffect","peopleFromServer","console","warn","initialValue","useMemo","Provider","value","Loader","className","TableItem","person","name","sex","born","died","slug","motherName","fatherName","peopleId","useParams","mother","find","currentPerson","father","classNames","to","TableList","useContext","map","Table","length","People","Home","NotFound","getClassesLink","isActive","NavBar","role","App","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.849e6bad.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import {\n  FC,\n  ReactNode,\n  createContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\n\ninterface IInitialContext {\n  people: Person[];\n  isLoading: boolean;\n  errorMessage: string;\n}\n\ntype TPeopleContext = {\n  children: ReactNode;\n};\n\nconst initialContext: IInitialContext = {\n  people: [],\n  isLoading: false,\n  errorMessage: 'Something went wrong',\n};\n\nexport const PeopleProvider = createContext(initialContext);\n\nexport const PeopleContext: FC<TPeopleContext> = ({ children }) => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const { pathname } = useLocation();\n\n  const containsPeople = pathname.includes('/people');\n\n  useEffect(() => {\n    (async () => {\n      setIsLoading(true);\n\n      if (!containsPeople) {\n        return;\n      }\n\n      try {\n        const peopleFromServer = await getPeople();\n\n        setPeople(peopleFromServer);\n\n        setIsLoading(false);\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.warn(error);\n\n        setErrorMessage('Something went wrong');\n        setIsLoading(false);\n      }\n    })();\n  }, [containsPeople]);\n\n  const initialValue = useMemo(() => ({\n    people,\n    isLoading,\n    errorMessage,\n  }), [people, isLoading, errorMessage]);\n\n  return (\n    <PeopleProvider.Provider value={initialValue}>\n      {children}\n    </PeopleProvider.Provider>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { Person } from '../../types';\n\ntype TTableItemProps = {\n  person: Person;\n  people: Person[];\n};\n\nexport const TableItem: FC<TTableItemProps> = ({ person, people }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    slug,\n    motherName,\n    fatherName,\n  } = person;\n\n  const { peopleId } = useParams();\n\n  const mother = people\n    .find(currentPerson => currentPerson.name === motherName);\n\n  const father = people\n    .find(currentPerson => currentPerson.name === fatherName);\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': peopleId === slug,\n      })}\n    >\n      <td>\n        <Link\n          to={`/people/${slug}`}\n          className={classNames({\n            'has-text-danger': sex === 'f',\n          })}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother ? (\n          <Link\n            className=\"has-text-danger\"\n            to={`/people/${mother?.slug}`}\n          >\n            {motherName}\n          </Link>\n        ) : (\n          motherName || '-'\n        )}\n      </td>\n\n      <td>\n        {father ? (\n          <Link\n            to={`/people/${father?.slug}`}\n          >\n            {fatherName}\n          </Link>\n        ) : (\n          fatherName || '-'\n        )}\n      </td>\n    </tr>\n  );\n};\n","import { useContext } from 'react';\n\nimport { PeopleProvider } from '../../store/PeopleContext';\nimport { TableItem } from '../TableItem';\n\nexport const TableList = () => {\n  const { people } = useContext(PeopleProvider);\n\n  return (\n    <tbody>\n      {people.map(person => (\n        <TableItem\n          people={people}\n          key={person.slug}\n          person={person}\n        />\n      ))}\n    </tbody>\n  );\n};\n","import { useContext } from 'react';\n\nimport { PeopleProvider } from '../../store/PeopleContext';\nimport { Loader } from '../Loader';\n\nimport { TableList } from '../TableList';\n\nexport const Table = () => {\n  const { isLoading, errorMessage, people } = useContext(PeopleProvider);\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        {isLoading && !errorMessage ? (\n          <Loader />\n        ) : (\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Sex</th>\n                <th>Born</th>\n                <th>Died</th>\n                <th>Mother</th>\n                <th>Father</th>\n              </tr>\n            </thead>\n\n            {people.length ? (\n              <TableList />\n            ) : (\n              !errorMessage && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )\n            )}\n          </table>\n        )}\n\n        {errorMessage && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            {errorMessage}\n          </p>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { FC } from 'react';\nimport { Table } from '../../components/Table';\n\ntype TPeopleProps = {};\n\nexport const People: FC<TPeopleProps> = () => {\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <Table />\n    </>\n  );\n};\n","export const Home = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const NotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst getClassesLink = ({ isActive }: { isActive: boolean }) => (\n  classNames('navbar-item', { 'has-background-grey-lighter': isActive })\n);\n\nexport const NavBar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={getClassesLink}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          className={getClassesLink}\n          to=\"people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import { Navigate, Route, Routes } from 'react-router-dom';\n\nimport { People } from './pages/People';\nimport { Home } from './pages/Home';\nimport { NotFound } from './pages/NotFound';\n\nimport { NavBar } from './components/NavBar';\n\nimport './App.scss';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"people\">\n            <Route index element={<People />} />\n            <Route path=\":peopleId\" element={<People />} />\n          </Route>\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<NotFound />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { App } from './App';\n\nimport { PeopleContext } from './store/PeopleContext';\n\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport 'bulma/css/bulma.css';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <PeopleContext>\n        <App />\n      </PeopleContext>\n    </Router>,\n  );\n"],"sourceRoot":""}